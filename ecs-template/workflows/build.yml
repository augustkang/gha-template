name: Build docker iamge and push to ECR

on:
  workflow_call:
    inputs:
      phase:
        required: true
        type: string
      region:
        required: true
        type: string
      role_to_assume:
        required: true
        type: string
      ecr_repository:
        required: true
        type: string
      node_env:
        required: true
        type: string
      image_tag:
        required: true
        type: string

jobs:
  build:
    name: Build and push image
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Git checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ inputs.role_to_assume }}
          aws-region: ${{ inputs.region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Build, tag, and push image to Amazon ECR
        id: build-and-push
        uses: docker/build-push-action@v2
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repository }}
          IMAGE_TAG: ${{ inputs.image_tag }}
          NODE_ENV: ${{ inputs.node_env }}
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ inputs.ecr_repository }}:${{ inputs.image_tag }}
          build-args: |
            NODE_ENV_ARG=${{ inputs.node_env }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

